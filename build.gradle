plugins {
    id "de.undercouch.download" version "3.1.1"
}

group 'prosecutor.barrister'
version '0.0.1'

apply plugin: 'antlr'
apply plugin: 'java'
apply plugin: 'idea'

idea.module {
    excludeDirs -= file(buildDir)
    sourceDirs += file("${buildDir}/generated-src/antlr/main")
    sourceDirs += file("${buildDir}/generated-src/jaxb/main")
    testSourceDirs += file("${buildDir}/generated-src/antlr/test")
    testSourceDirs += file("${buildDir}/generated-src/jaxb/test")
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
configurations {
    jaxb
}
dependencies {
    jaxb 'com.sun.xml.bind:jaxb-impl:2.2.6'
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.6'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.5'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5'
    testCompile group: 'org.testng', name: 'testng', version: '6.9.9'

    antlr "org.antlr:antlr4:4.5"
}
            
sourceSets.main.java.srcDir(file("${buildDir}/generated-src/jaxb/main"))
sourceSets.main.java.srcDir(file("${buildDir}/generated-src/antlr/main"))   
sourceSets.test.java.srcDir(file("${buildDir}/generated-src/jaxb/test")) 
sourceSets.test.java.srcDir(file("${buildDir}/generated-src/antlr/test")) 

generateGrammarSource {
  source(file("src/main/antlr"))
  include("*.g4")
}       
generateTestGrammarSource {
  source(file("src/test/antlr"))     
  include("*.g4")
}
compileJava {  
}

task jaxb() {      
    def jaxbTargetDir = file( "${buildDir}/generated-src/jaxb/" )    
    def jaxbTargetMainDir = file( "${buildDir}/generated-src/jaxb/main" )
    def jaxbTargetTestDir = file( "${buildDir}/generated-src/jaxb/test" )   
    outputs.dir jaxbTargetDir
    ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath) 
    def folder = new File("${temporaryDir}")   
    
    def f = new File("${temporaryDir}/BarristerReportSchema.xsd")
    def f2 = new File("${temporaryDir}/ProsecutorCoreSchema.xsd")
    def f3 = new File("${temporaryDir}/BarristerInputSchema.xsd")
    doLast{
        jaxbTargetMainDir.mkdirs()
    jaxbTargetTestDir.mkdirs()
    folder.mkdirs()
    download {
        src 'https://prosecute.github.io/XMLSchema/BarristerReportSchema.xsd'
        acceptAnyCertificate true
        dest folder
    }
    download {
        src 'https://prosecute.github.io/XMLSchema/ProsecutorCoreSchema.xsd'  
        acceptAnyCertificate true
        dest folder
    }  
    download {
        src 'https://prosecute.github.io/XMLSchema/BarristerInputSchema.xsd'    
        acceptAnyCertificate true
        dest folder
    }
        ant.jaxbTargetDir = jaxbTargetMainDir
        ant.xjc(
                destdir: "${jaxbTargetMainDir}",
                package: 'prosecutor.barrister.jaxb',
                schema: f
        ){arg(value:"-disableXmlSecurity")}
        ant.xjc(
                destdir: "${jaxbTargetMainDir}",
                package: 'prosecutor.barrister.jaxb',
                schema: f2
        ){arg(value:"-disableXmlSecurity")}
        ant.xjc(
                destdir: "${jaxbTargetMainDir}",
                package: 'prosecutor.barrister.jaxb',
                schema: f3
        ){arg(value:"-disableXmlSecurity")}
        ant.jaxbTargetDir = jaxbTargetTestDir
        ant.xjc(
                destdir: "${jaxbTargetTestDir}",
                package: 'prosecutor.barrister.jaxb',
                schema: f
        ){arg(value:"-disableXmlSecurity")}
        ant.xjc(
                destdir: "${jaxbTargetTestDir}",
                package: 'prosecutor.barrister.jaxb',
                schema: f2
        ){arg(value:"-disableXmlSecurity")}
        ant.xjc(
                destdir: "${jaxbTargetTestDir}",
                package: 'prosecutor.barrister.jaxb',
                schema: f3
        ){arg(value:"-disableXmlSecurity")}
        }
}        
compileJava {
  dependsOn jaxb                  
}

